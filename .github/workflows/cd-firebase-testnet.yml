name: CD Firebase Testnet

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  web-angular-test:
    name: Web Angular Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
      - run: npm ci
      - run: npm run test:ci

  web-angular-e2e:
    name: Web Angular E2E
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json

      - name: Create environment file's directory
        run: mkdir -p ./projects/web/src/environments
      - name: Create empty environment file
        run: touch ./projects/web/src/environments/environment.ts
      - name: Create empty environment file for development
        run: touch ./projects/web/src/environments/environment.development.ts
      - name: Restore environment file content from Repository secrets
        env:
          ANGULAR_WEB_ENVIRONMENT: ${{ secrets.ANGULAR_WEB_ENVIRONMENT_TESTNET_DEV }}
        run: echo $ANGULAR_WEB_ENVIRONMENT | base64 --decode --ignore-garbage > ./projects/web/src/environments/environment.development.ts

      - run: npm ci
      - run: npm run e2e:ci

  firebase-functions-test:
    name: Firebase Functions Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            ./functions/package-lock.json
      - run: npm ci
        working-directory: ./functions
      - run: npm run test
        working-directory: ./functions

  deploy-testnet:
    name: Deploy Firebase Testnet
    needs:
      - web-angular-test
      - web-angular-e2e
      - firebase-functions-test
    runs-on: ubuntu-latest
    environment:
      name: testnet
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            ./functions/package-lock.json

      - name: Create environment file's directory
        run: mkdir -p ./projects/web/src/environments
      - name: Create empty environment file
        run: touch ./projects/web/src/environments/environment.ts
      - name: Create empty environment file for production
        run: touch ./projects/web/src/environments/environment.production.ts
      - name: Restore environment file content from Environment secrets
        env:
          ANGULAR_WEB_ENVIRONMENT: ${{ secrets.ANGULAR_WEB_ENVIRONMENT_TESTNET_PROD }}
        run: echo $ANGULAR_WEB_ENVIRONMENT | base64 --decode --ignore-garbage > ./projects/web/src/environments/environment.production.ts

      - run: npm ci
      - run: npm run build
      - run: npm ci
        working-directory: ./functions
      - run: npm run build
        working-directory: ./functions
      - run: npx firebase deploy --project=testnet --token=${{ secrets.FIREBASE_TOKEN }} --force
